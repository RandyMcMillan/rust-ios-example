#!/bin/sh

type -P cargo-lipo || cargo install cargo-lipo
type -P cbindgen || cargo install cbindgen

UNAME_M=$(uname -m)
if [[ "$UNAME_M" == "arm64" ]];
then
UNAME_M=aarch64
fi

install_targets(){

# 64 bit targets (real device & simulator):
rustup target add \
$UNAME_M-apple-ios \
$UNAME_M-apple-ios-sim \
$UNAME_M-apple-darwin

rustup toolchain install nightly-$UNAME_M-apple-darwin --force-non-host
rustup component add rust-src --toolchain nightly-$UNAME_M-apple-darwin

# 32 bit targets (you probably don't need these):
#rustup target add armv7-apple-ios
#rustup target add i386-apple-ios
#rustup target add armv7s-apple-ios

}
rustup default stable
install_targets
rustup default nightly
install_targets

cd rust
cargo +nightly b -Z build-std \
--target $UNAME_M-apple-ios \
--target $UNAME_M-apple-ios-sim \
--target $UNAME_M-apple-darwin || \
cargo +nightly build -Z build-std --target $UNAME_M-apple-ios-sim
cargo lipo --release
cbindgen src/lib.rs -l c > rust.h

cp rust.h ../hello-rust/include
cp target/universal/release/librust.a ../hello-rust/libs
cp target/aarch64-apple-ios-sim/debug/librust.a ../hello-rust/libs/librust-sim.a

cd ../hello-rust && xcodebuild

xcrun xcodebuild   -scheme hello-rust   -project hello-rust.xcodeproj   -configuration Debug   -destination 'platform=iOS Simulator,name=iPhone 6 Plus,OS=9.1'   -derivedDataPath   build
